{"ast":null,"code":"import _regeneratorRuntime from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as moment from 'moment';\nimport axios from 'axios';\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(params) {\n    var tableData, collection, startDate, timeEnd, diff, diffDuration, deleteUrl;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            collection = 'http://localhost:4000/rest/checkTransfer/' + params.contactId + '&' + params.valueTransfer;\n            _context.next = 4;\n            return axios.get(collection, {\n              responseType: 'json'\n            }).then(function (response) {\n              tableData = response.data;\n            });\n\n          case 4:\n            startDate = tableData[0].createdAt;\n            timeEnd = moment();\n            diff = timeEnd.diff(startDate);\n            diffDuration = moment.duration(diff);\n\n            if (!(diffDuration.asMilliseconds() <= 120000)) {\n              _context.next = 14;\n              break;\n            }\n\n            // console.log('Exclui transação com ID: ', tableData[0]._id);\t\t\t\n            deleteUrl = 'http://localhost:4000/rest/transfers/' + tableData[0]._id;\n            _context.next = 12;\n            return axios.delete(deleteUrl, {\n              responseType: 'json'\n            }).then(function (response) {\n              return 'previousFound';\n            });\n\n          case 12:\n            _context.next = 15;\n            break;\n\n          case 14:\n            return _context.abrupt(\"return\", true);\n\n          case 15:\n            _context.next = 20;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", false);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[0, 17]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/home/cleber/projetos/ikkeTask/src/components/Transfers/TransfersCheckPrevious.js"],"names":["moment","axios","params","collection","contactId","valueTransfer","get","responseType","then","response","tableData","data","startDate","createdAt","timeEnd","diff","diffDuration","duration","asMilliseconds","deleteUrl","_id","delete"],"mappings":";;AAAA,OAAO,KAAKA,MAAZ,MAAwB,QAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAe,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIPC,YAAAA,UAJO,GAIM,8CAA8CD,MAAM,CAACE,SAArD,GAAiE,GAAjE,GAAuEF,MAAM,CAACG,aAJpF;AAAA;AAAA,mBAMJJ,KAAK,CAACK,GAAN,CAAUH,UAAV,EAAsB;AACxBI,cAAAA,YAAY,EAAE;AADU,aAAtB,EAEHC,IAFG,CAEE,UAAAC,QAAQ,EAAI;AAChBC,cAAAA,SAAS,GAAGD,QAAQ,CAACE,IAArB;AAEH,aALK,CANI;;AAAA;AAaPC,YAAAA,SAbO,GAaKF,SAAS,CAAC,CAAD,CAAT,CAAaG,SAblB;AAcPC,YAAAA,OAdO,GAcGd,MAAM,EAdT;AAgBPe,YAAAA,IAhBO,GAgBAD,OAAO,CAACC,IAAR,CAAaH,SAAb,CAhBA;AAiBPI,YAAAA,YAjBO,GAiBQhB,MAAM,CAACiB,QAAP,CAAgBF,IAAhB,CAjBR;;AAAA,kBAmBVC,YAAY,CAACE,cAAb,MAAgC,MAnBtB;AAAA;AAAA;AAAA;;AAoBZ;AACMC,YAAAA,SArBM,GAqBM,0CAAyCT,SAAS,CAAC,CAAD,CAAT,CAAaU,GArB5D;AAAA;AAAA,mBAsBNnB,KAAK,CAACoB,MAAN,CAAaF,SAAb,EAAwB;AACxBZ,cAAAA,YAAY,EAAE;AADU,aAAxB,EAEAC,IAFA,CAEK,UAAAC,QAAQ,EAAI;AAChB,qBAAO,eAAP;AACH,aAJE,CAtBM;;AAAA;AAAA;AAAA;;AAAA;AAAA,6CA8BL,IA9BK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAkCN,KAlCM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import * as moment from 'moment';\nimport axios from 'axios';\n\nexport default async params => {\n  let tableData: [];\n\n\ttry {\n\t\tconst collection = 'http://localhost:4000/rest/checkTransfer/' + params.contactId + '&' + params.valueTransfer;\n\t\t\n\t    await axios.get(collection, {\n\t        responseType: 'json'\n\t    }).then(response => {\n\t        tableData = response.data;\n\n\t    });\n\n\t\tconst startDate = tableData[0].createdAt;\n\t\tconst timeEnd = moment();\n\n\t\tconst diff = timeEnd.diff(startDate);\n\t\tconst diffDuration = moment.duration(diff);\n\n\t\tif(diffDuration.asMilliseconds()<= 120000){\n\t\t\t// console.log('Exclui transação com ID: ', tableData[0]._id);\t\t\t\n\t\t\tconst deleteUrl = 'http://localhost:4000/rest/transfers/'+ tableData[0]._id;\n\t\t\tawait axios.delete(deleteUrl, {\n\t        responseType: 'json'\n\t\t    }).then(response => {\n\t\t        return 'previousFound';\n\t\t    });\n\t\t\t\t\n\t\t} else {\n\t\t\t// console.log('retorna para Salvar a transação atual');\n\t\t\treturn true;\n\t\t}\n\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\n"]},"metadata":{},"sourceType":"module"}