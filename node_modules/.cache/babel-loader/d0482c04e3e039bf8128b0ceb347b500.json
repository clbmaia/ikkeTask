{"ast":null,"code":"import _regeneratorRuntime from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cleber/projetos/ikkeTask/src/components/Transfers/TransfersForm.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { get } from 'lodash';\nimport swal from 'sweetalert';\nimport submitData from '../Submit/SubmitData';\nimport transfersCheckPrevious from './TransfersCheckPrevious';\nimport axios from 'axios';\nimport { read_cookie } from 'sfcookies';\n\nvar TransfersForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TransfersForm, _Component);\n\n  function TransfersForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TransfersForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TransfersForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      reason: '',\n      contact: '',\n      valueTransfer: '',\n      dateTransfer: '',\n      tableData: []\n    };\n\n    _this.handleChangeReason = function (event) {\n      _this.setState({\n        reason: event.target.value\n      });\n    };\n\n    _this.handleChangeContact = function (event) {\n      _this.setState({\n        contact: event.target.value\n      });\n    };\n\n    _this.handleChangeValueTransfer = function (event) {\n      _this.setState({\n        valueTransfer: event.target.value\n      });\n    };\n\n    _this.handleChangeDateTransfer = function (event) {\n      _this.setState({\n        dateTransfer: event.target.value\n      });\n    };\n\n    _this._onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.refresh =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                window.location.reload();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.salvar =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var contact, reason, contactId, valueTransfer, dateTransfer, collection, userId, dataTransfer, success;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                reason = get(_this.state, 'reason');\n                contactId = get(_this.state, 'contact');\n                valueTransfer = get(_this.state, 'valueTransfer');\n                dateTransfer = get(_this.state, 'dateTransfer');\n\n                if (!(reason.length <= 1)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                swal('Erro', 'Verifique o campo Motivo.', 'error');\n                return _context2.abrupt(\"return\", false);\n\n              case 8:\n                if (!(contactId.length <= 1)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                swal('Erro', 'Verifique o campo Contato.', 'error');\n                return _context2.abrupt(\"return\", false);\n\n              case 11:\n                if (!(valueTransfer.length <= 1)) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                swal('Erro', 'Verifique o campo Valor.', 'error');\n                return _context2.abrupt(\"return\", false);\n\n              case 14:\n                if (!(dateTransfer.length <= 1)) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                swal('Erro', 'Verifique o campo Data.', 'error');\n                return _context2.abrupt(\"return\", false);\n\n              case 17:\n                collection = 'http://localhost:4000/rest/contacts/' + contactId;\n                _context2.next = 20;\n                return axios.get(collection, {\n                  responseType: 'json'\n                }).then(function (response) {\n                  contact = response.data.name;\n                });\n\n              case 20:\n                userId = read_cookie('id');\n                dataTransfer = {\n                  reason: reason,\n                  contact: contact,\n                  contactId: contactId,\n                  valueTransfer: valueTransfer,\n                  dateTransfer: dateTransfer,\n                  userId: userId,\n                  collection: \"transfers\"\n                };\n                _context2.next = 24;\n                return transfersCheckPrevious(dataTransfer);\n\n              case 24:\n                _context2.next = 26;\n                return submitData(dataTransfer);\n\n              case 26:\n                success = _context2.sent;\n\n                if (success) {\n                  swal({\n                    title: 'Sucesso',\n                    text: 'Transferência efetuada!',\n                    icon: 'success'\n                  }).then(function () {\n                    window.location.reload();\n                  });\n                } else {\n                  swal('Erro', 'Falha no envio do Formulário!', 'error');\n                }\n\n              case 28:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(TransfersForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:4000/rest/contacts', {\n        responseType: 'json'\n      }).then(function (response) {\n        _this2.setState({\n          tableData: response.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tableData = this.state.tableData;\n      var userId = read_cookie('id');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"reason\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Motivo da transferencia:\"), React.createElement(Input, {\n        name: \"reason\",\n        id: \"reason\",\n        type: \"text\",\n        placeholder: \"Motivo\",\n        value: this.state.value,\n        onChange: this.handleChangeReason,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Contato Favorecido\"), React.createElement(Input, {\n        type: \"select\",\n        name: \"contact\",\n        id: \"contact\",\n        value: this.state.value,\n        onChange: this.handleChangeContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Escolha um Contato Favorecido para Transferencia\"), tableData.map(function (contacts) {\n        return contacts.userId === userId ? React.createElement(\"option\", {\n          key: contacts._id,\n          value: contacts._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, contacts.name, \" - CONTA: \", contacts.account, \" - CPF/CNPJ: \", contacts.cpf) : '';\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"valueTransfer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Valor\"), React.createElement(Input, {\n        name: \"valueTransfer\",\n        id: \"valueTransfer\",\n        type: \"number\",\n        min: \"1.00\",\n        max: \"10000.00\",\n        step: \"1.00\",\n        value: this.state.value,\n        onChange: this.handleChangeValueTransfer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"dateTransfer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Data da Transferencia\"), React.createElement(Input, {\n        type: \"date\",\n        name: \"dateTransfer\",\n        id: \"dateTransfer\",\n        min: \"2018-10-05\",\n        value: this.state.value,\n        onChange: this.handleChangeDateTransfer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/Transferencias\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        className: \"btn btn-primary\",\n        onClick: this.salvar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Salvar\")), React.createElement(Link, {\n        to: \"/Transferencias\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn btn-secondary float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Cancelar\")))));\n    }\n  }]);\n\n  return TransfersForm;\n}(Component);\n\nexport default TransfersForm;","map":{"version":3,"sources":["/home/cleber/projetos/ikkeTask/src/components/Transfers/TransfersForm.js"],"names":["React","Component","Link","Button","Form","FormGroup","Label","Input","get","swal","submitData","transfersCheckPrevious","axios","read_cookie","TransfersForm","state","reason","contact","valueTransfer","dateTransfer","tableData","handleChangeReason","event","setState","target","value","handleChangeContact","handleChangeValueTransfer","handleChangeDateTransfer","_onChange","e","name","refresh","window","location","reload","salvar","preventDefault","contactId","length","collection","responseType","then","response","data","userId","dataTransfer","success","title","text","icon","map","contacts","_id","account","cpf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { get } from 'lodash';\nimport swal from 'sweetalert';\nimport submitData from '../Submit/SubmitData';\nimport transfersCheckPrevious from './TransfersCheckPrevious';\nimport axios from 'axios';\nimport { read_cookie } from 'sfcookies';\n\nclass TransfersForm extends Component {\n\n  state = {\n    reason: '',\n    contact: '',\n    valueTransfer: '',\n    dateTransfer: '',\n    tableData: []\n  };\n\n  handleChangeReason = event => {\n    this.setState({ reason: event.target.value });\n  };\n\n  handleChangeContact = event => {\n    this.setState({ contact: event.target.value });\n  };\n\n  handleChangeValueTransfer = event => {\n    this.setState({ valueTransfer: event.target.value });\n  };\n\n  handleChangeDateTransfer = event => {\n    this.setState({ dateTransfer: event.target.value });\n  };\n\n  _onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  refresh = async event => {\n      window.location.reload(); \n   };\n\n  salvar = async event => {\n    event.preventDefault();\n    let contact;\n    const reason = get(this.state, 'reason');\n    const contactId = get(this.state, 'contact');\n    const valueTransfer = get(this.state, 'valueTransfer');\n    const dateTransfer = get(this.state, 'dateTransfer');\n\n\n    if (reason.length <= 1) {\n      swal('Erro', 'Verifique o campo Motivo.', 'error');\n      return false;\n    }\n\n    if (contactId.length <= 1) {\n      swal('Erro', 'Verifique o campo Contato.', 'error');\n      return false;\n    } \n\n    if (valueTransfer.length <= 1) {\n      swal('Erro', 'Verifique o campo Valor.', 'error');\n      return false;\n    }\n\n    if (dateTransfer.length <= 1) {\n      swal('Erro', 'Verifique o campo Data.', 'error');\n      return false;\n    }\n\n    const collection = 'http://localhost:4000/rest/contacts/' + contactId;\n      await axios.get(collection, {\n          responseType: 'json'\n      }).then(response => {\n          contact = response.data.name;\n      });\n    \n    const userId = read_cookie('id');    \n\n    const dataTransfer = {\n      reason: reason,\n      contact: contact,\n      contactId: contactId,\n      valueTransfer: valueTransfer,\n      dateTransfer: dateTransfer,\n      userId: userId,\n      collection: \"transfers\"\n    };\n\n    await transfersCheckPrevious(dataTransfer);\n\n    const success = await submitData(dataTransfer);\n    if (success) {\n      swal({\n        title: 'Sucesso',\n        text: 'Transferência efetuada!',\n        icon: 'success'\n      }).then(function() {\n         window.location.reload(); \n      });\n    } else {\n      swal('Erro', 'Falha no envio do Formulário!', 'error');\n    }\n  };\n\ncomponentDidMount () {\n    axios.get('http://localhost:4000/rest/contacts', {\n        responseType: 'json'\n    }).then(response => {\n        this.setState({ tableData: response.data });\n    });\n}\n\nrender() {\n  const tableData = this.state.tableData;\n  const userId = read_cookie('id'); \n    return (\n      <div>\n      <Form>\n      <FormGroup>\n        <Label for=\"reason\">Motivo da transferencia:</Label>\n        <Input name=\"reason\" id=\"reason\" type=\"text\" placeholder=\"Motivo\" value={this.state.value} onChange={this.handleChangeReason} />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"contact\">Contato Favorecido</Label>       \n        <Input type=\"select\"  name=\"contact\" id=\"contact\" value={this.state.value} onChange={this.handleChangeContact} >\n          <option value=\"-1\">Escolha um Contato Favorecido para Transferencia</option>\n          {tableData.map(contacts => \n           contacts.userId === userId ? \n            <option key={contacts._id} value={contacts._id}>{contacts.name} - CONTA: {contacts.account} - CPF/CNPJ: {contacts.cpf}</option>\n           : ''\n          )}\n         </Input>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"valueTransfer\">Valor</Label>\n        <Input name=\"valueTransfer\" id=\"valueTransfer\" type=\"number\" min=\"1.00\" max=\"10000.00\" step=\"1.00\" value={this.state.value} onChange={this.handleChangeValueTransfer} />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"dateTransfer\">Data da Transferencia</Label>\n        <Input type=\"date\" name=\"dateTransfer\" id=\"dateTransfer\" min=\"2018-10-05\" value={this.state.value} onChange={this.handleChangeDateTransfer} />\n      </FormGroup>\n      <FormGroup>\n          <Link to=\"/Transferencias\">\n             <Button color=\"primary\" className=\"btn btn-primary\" onClick={this.salvar}>\n                  Salvar\n             </Button>\n          </Link>\n          <Link to=\"/Transferencias\">\n             <Button className=\"btn btn-secondary float-right\">\n                  Cancelar\n             </Button>\n          </Link>      \n        </FormGroup>\n        </Form>\n      </div>\n    );\n  }\n}\nexport default TransfersForm;"]},"metadata":{},"sourceType":"module"}