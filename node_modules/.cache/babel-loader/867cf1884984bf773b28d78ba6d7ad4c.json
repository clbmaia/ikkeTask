{"ast":null,"code":"import _regeneratorRuntime from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cleber/projetos/ikkeTask/src/components/Contacts/ContactsForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { get } from 'lodash';\nimport swal from 'sweetalert';\nimport submitData from '../Submit/SubmitData';\nimport { read_cookie } from 'sfcookies';\n\nvar ContactsForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactsForm, _Component);\n\n  function ContactsForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContactsForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContactsForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      cpf: '',\n      email: '',\n      account: ''\n    };\n\n    _this.handleChangeName = function (event) {\n      _this.setState({\n        name: event.target.value\n      });\n    };\n\n    _this.handleChangeCPF = function (event) {\n      _this.setState({\n        cpf: event.target.value\n      });\n    };\n\n    _this.handleChangeEmail = function (event) {\n      _this.setState({\n        email: event.target.value\n      });\n    };\n\n    _this.handleChangeAccount = function (event) {\n      _this.setState({\n        account: event.target.value\n      });\n    };\n\n    _this._onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.refresh =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('Refresh');\n                window.location.reload();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.salvar =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(event) {\n        var name, email, cpf, account, userId, dataContact, success;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                name = get(_this.state, 'name');\n                email = get(_this.state, 'email');\n                cpf = get(_this.state, 'cpf');\n                account = get(_this.state, 'account');\n\n                if (!(name.length <= 1)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                swal('Erro', 'Verifique o campo Nome.', 'error');\n                return _context2.abrupt(\"return\", false);\n\n              case 8:\n                if (!(cpf.length <= 1)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                swal('Erro', 'Verifique o campo CPF.', 'error');\n                return _context2.abrupt(\"return\", false);\n\n              case 11:\n                if (!(email.length <= 1)) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                swal('Erro', 'Verifique o campo Email.', 'error');\n                return _context2.abrupt(\"return\", false);\n\n              case 14:\n                if (!(account.length <= 1)) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                swal('Erro', 'Verifique o campo Conta.', 'error');\n                return _context2.abrupt(\"return\", false);\n\n              case 17:\n                userId = read_cookie('id');\n                dataContact = {\n                  name: name,\n                  email: email,\n                  cpf: cpf,\n                  account: account,\n                  userId: userId,\n                  collection: \"contacts\"\n                };\n                _context2.next = 21;\n                return submitData(dataContact);\n\n              case 21:\n                success = _context2.sent;\n\n                if (success) {\n                  swal({\n                    title: 'Sucesso',\n                    text: 'Contato cadastrado!',\n                    type: 'success'\n                  }).then(function () {\n                    window.location.reload();\n                  });\n                } else {\n                  swal('Erro', 'Falha no envio do FormulÃ¡rio!', 'error');\n                }\n\n              case 23:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(ContactsForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Nome\"), React.createElement(Input, {\n        name: \"name\",\n        id: \"name\",\n        type: \"text\",\n        placeholder: \"Nome\",\n        value: this.state.value,\n        onChange: this.handleChangeName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"cpf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"CPF/CNPJ\"), React.createElement(Input, {\n        name: \"cpf\",\n        id: \"cpf\",\n        type: \"text\",\n        placeholder: \"CPF/CNPJ\",\n        value: this.state.value,\n        onChange: this.handleChangeCPF,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        name: \"email\",\n        id: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        value: this.state.value,\n        onChange: this.handleChangeEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"N\\xFAmero da Conta\"), React.createElement(Input, {\n        type: \"number\",\n        name: \"account\",\n        id: \"account\",\n        placeholder: \"N\\xFAmero da Conta\",\n        value: this.state.value,\n        onChange: this.handleChangeAccount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        className: \"btn btn-primary\",\n        onClick: this.salvar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Salvar\"), React.createElement(Button, {\n        className: \"btn btn-secondary float-right\",\n        onClick: this.refresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Cancelar\"))));\n    }\n  }]);\n\n  return ContactsForm;\n}(Component);\n\nexport default ContactsForm;","map":{"version":3,"sources":["/home/cleber/projetos/ikkeTask/src/components/Contacts/ContactsForm.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","get","swal","submitData","read_cookie","ContactsForm","state","name","cpf","email","account","handleChangeName","event","setState","target","value","handleChangeCPF","handleChangeEmail","handleChangeAccount","_onChange","e","refresh","console","log","window","location","reload","salvar","preventDefault","length","userId","dataContact","collection","success","title","text","type","then"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {  Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { get } from 'lodash';\nimport swal from 'sweetalert';\nimport submitData from '../Submit/SubmitData';\nimport { read_cookie } from 'sfcookies';\n\nclass ContactsForm extends Component {\n\n  state = {\n    name: '',\n    cpf: '',\n    email: '',\n    account: ''\n  };\n\n  handleChangeName = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleChangeCPF = event => {\n    this.setState({ cpf: event.target.value });\n  };\n\n  handleChangeEmail = event => {\n    this.setState({ email: event.target.value });\n  };\n\n  handleChangeAccount = event => {\n    this.setState({ account: event.target.value });\n  };\n\n  _onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  refresh = async event => {\n      console.log('Refresh');\n      window.location.reload(); \n   };\n\n  salvar = async event => {\n    event.preventDefault();\n    const name = get(this.state, 'name');\n    const email = get(this.state, 'email');\n    const cpf = get(this.state, 'cpf');\n    const account = get(this.state, 'account');\n\n    if (name.length <= 1) {\n      swal('Erro', 'Verifique o campo Nome.', 'error');\n      return false;\n    }\n\n    if (cpf.length <= 1) {\n      swal('Erro', 'Verifique o campo CPF.', 'error');\n      return false;\n    } \n\n    if (email.length <= 1) {\n      swal('Erro', 'Verifique o campo Email.', 'error');\n      return false;\n    }\n\n    if (account.length <= 1) {\n      swal('Erro', 'Verifique o campo Conta.', 'error');\n      return false;\n    }\n\n    const userId = read_cookie('id');\n    \n    const dataContact = {\n      name: name,\n      email: email,\n      cpf: cpf,\n      account: account,\n      userId: userId,\n      collection: \"contacts\"\n    };\n\n    const success = await submitData(dataContact);\n    if (success) {\n      swal({\n        title: 'Sucesso',\n        text: 'Contato cadastrado!',\n        type: 'success'\n      }).then(function() {\n         window.location.reload(); \n      });\n    } else {\n      swal('Erro', 'Falha no envio do FormulÃ¡rio!', 'error');\n    }\n  };\n\nrender() {\n    return (\n      <div>\n      <Form>\n        <FormGroup>\n          <Label for=\"name\">Nome</Label>\n          <Input name=\"name\" id=\"name\" type=\"text\" placeholder=\"Nome\" value={this.state.value} onChange={this.handleChangeName} />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"cpf\">CPF/CNPJ</Label>\n          <Input name=\"cpf\" id=\"cpf\" type=\"text\" placeholder=\"CPF/CNPJ\" value={this.state.value} onChange={this.handleChangeCPF} />     \n        </FormGroup>\n        <FormGroup>\n          <Label for=\"email\">Email</Label>\n          <Input name=\"email\" id=\"email\" type=\"email\" placeholder=\"Email\" value={this.state.value} onChange={this.handleChangeEmail} />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"account\">NÃºmero da Conta</Label>\n          <Input type=\"number\" name=\"account\" id=\"account\" placeholder=\"NÃºmero da Conta\" value={this.state.value} onChange={this.handleChangeAccount} />\n        </FormGroup>\n         <FormGroup>\n             <Button color=\"primary\" className=\"btn btn-primary\" onClick={this.salvar}>\n                  Salvar\n             </Button>\n             <Button className=\"btn btn-secondary float-right\" onClick={this.refresh}>\n                  Cancelar\n             </Button>\n        </FormGroup>\n      </Form>\n      </div>\n    );\n  }\n}\nexport default ContactsForm;"]},"metadata":{},"sourceType":"module"}