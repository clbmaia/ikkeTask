{"ast":null,"code":"import _classCallCheck from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cleber/projetos/ikkeTask/src/components/Contacts/ContactsList.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport { Table } from 'reactstrap';\nimport { read_cookie } from 'sfcookies';\n\nvar ContactsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactsList, _Component);\n\n  function ContactsList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContactsList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContactsList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tableData: []\n    };\n    return _this;\n  }\n\n  _createClass(ContactsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:4000/rest/contacts', {\n        responseType: 'json'\n      }).then(function (response) {\n        _this2.setState({\n          tableData: response.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tableData = this.state.tableData;\n      var userId = read_cookie('id');\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Table, {\n        hover: true,\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"NOME\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"EMAIL\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"CPF/CNPJ\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"CONTA\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, tableData.map(function (contacts) {\n        return contacts.userId === userId ? React.createElement(\"tr\", {\n          key: contacts.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, contacts.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, contacts.email), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, contacts.cpf), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, contacts.account)) : '';\n      }))));\n    }\n  }]);\n\n  return ContactsList;\n}(Component);\n\nexport default ContactsList;","map":{"version":3,"sources":["/home/cleber/projetos/ikkeTask/src/components/Contacts/ContactsList.js"],"names":["React","Component","Fragment","axios","Table","read_cookie","ContactsList","state","tableData","get","responseType","then","response","setState","data","userId","map","contacts","id","name","email","cpf","account"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,WAA5B;;IAEMC,Y;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE;AADL,K;;;;;;wCAIW;AAAA;;AACjBL,MAAAA,KAAK,CAACM,GAAN,CAAU,qCAAV,EAAiD;AAC7CC,QAAAA,YAAY,EAAE;AAD+B,OAAjD,EAEGC,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEL,UAAAA,SAAS,EAAEI,QAAQ,CAACE;AAAtB,SAAd;AACH,OAJD;AAKH;;;6BAGS;AACR,UAAMN,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA7B;AACA,UAAMO,MAAM,GAAGV,WAAW,CAAC,IAAD,CAA1B;AAEA,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,UAAU,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEGG,SAAS,CAACQ,GAAV,CAAc,UAAAC,QAAQ;AAAA,eACrBA,QAAQ,CAACF,MAAT,KAAoBA,MAApB,GACA;AAAI,UAAA,GAAG,EAAEE,QAAQ,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,QAAQ,CAACE,IAAd,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,QAAQ,CAACG,KAAd,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,QAAQ,CAACI,GAAd,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,QAAQ,CAACK,OAAd,CAJF,CADA,GAOE,EARmB;AAAA,OAAtB,CAFH,CATF,CAHF,CADF;AAgCD;;;;EAnD0BrB,S;;AAqD3B,eAAeK,YAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport { Table } from 'reactstrap';\nimport { read_cookie } from 'sfcookies';\n\nclass ContactsList extends Component {\n\n  state = {\n    tableData: []\n  };\n\ncomponentDidMount () {\n    axios.get('http://localhost:4000/rest/contacts', {\n        responseType: 'json'\n    }).then(response => {\n        this.setState({ tableData: response.data });\n    });\n}\n\n\nrender () {\n  const tableData = this.state.tableData;\n  const userId = read_cookie('id'); \n\n  return (\n    <Fragment>\n   \n\n      <Table hover responsive>\n        <thead>\n          <tr>\n            <th>NOME</th>\n            <th>EMAIL</th>\n            <th>CPF/CNPJ</th>\n            <th>CONTA</th>\n          </tr>\n        </thead>\n        <tbody>\n\n          {tableData.map(contacts => \n            contacts.userId === userId ?\n            <tr key={contacts.id}>\n              <td>{contacts.name}</td>\n              <td>{contacts.email}</td>\n              <td>{contacts.cpf}</td>\n              <td>{contacts.account}</td>\n            </tr>\n            : ''\n          )}\n\n\n        </tbody>\n      </Table>\n\n    </Fragment>\n  )\n}\n}\nexport default ContactsList;"]},"metadata":{},"sourceType":"module"}