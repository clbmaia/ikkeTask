{"ast":null,"code":"import _regeneratorRuntime from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cleber/projetos/ikkeTask/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cleber/projetos/ikkeTask/src/components/ForgotPassword/ForgotPasswordForm.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport swal from 'sweetalert';\nimport { get } from 'lodash';\nimport requestPassword from '../Submit/RequestPassword';\n\nvar ForgotPasswordForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForgotPasswordForm, _Component);\n\n  function ForgotPasswordForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ForgotPasswordForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ForgotPasswordForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: ''\n    };\n\n    _this.handleChangeEmail = function (event) {\n      _this.setState({\n        email: event.target.value\n      });\n    };\n\n    _this.enviar =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var email, dataRequest, success;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                email = get(_this.state, 'email');\n\n                if (!(email.length <= 1)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                swal('Erro', 'Verifique o campo Email.', 'error');\n                return _context.abrupt(\"return\", false);\n\n              case 5:\n                dataRequest = {\n                  email: email,\n                  collection: \"usersEmail\"\n                };\n                _context.next = 8;\n                return requestPassword(dataRequest);\n\n              case 8:\n                success = _context.sent;\n\n                if (success) {\n                  swal({\n                    title: 'Operação concluída',\n                    text: 'Foi enviado uma mensagem para: ' + email + ', informando a sua senha.',\n                    icon: 'success'\n                  }).then(function () {\n                    window.location.replace('/');\n                  });\n                } else {\n                  swal('Erro', 'Email informado não localizado.', 'error');\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(ForgotPasswordForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Digite seu \", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Email\"), \" e em breve, receber\\xE1 uma nova senha:\"), React.createElement(Input, {\n        name: \"email\",\n        id: \"email\",\n        type: \"email\",\n        placeholder: \"Email\",\n        value: this.state.value,\n        onChange: this.handleChangeEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        className: \"btn btn-primary\",\n        onClick: this.enviar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Enviar\"), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"btn btn-secondary float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Voltar\")))));\n    }\n  }]);\n\n  return ForgotPasswordForm;\n}(Component);\n\nexport default ForgotPasswordForm;","map":{"version":3,"sources":["/home/cleber/projetos/ikkeTask/src/components/ForgotPassword/ForgotPasswordForm.js"],"names":["React","Component","Link","Button","Form","FormGroup","Label","Input","swal","get","requestPassword","ForgotPasswordForm","state","email","handleChangeEmail","event","setState","target","value","enviar","preventDefault","length","dataRequest","collection","success","title","text","icon","then","window","location","replace"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport swal from 'sweetalert';\nimport { get } from 'lodash';\nimport requestPassword from '../Submit/RequestPassword';\n\nclass ForgotPasswordForm extends Component {\n\nstate = {\n  email: ''\n};\n\nhandleChangeEmail = event => {\n  this.setState({ email: event.target.value });\n};\n\n\nenviar = async event => {\n  event.preventDefault();\n  const email = get(this.state, 'email');\n\n  if (email.length <= 1) {\n    swal('Erro', 'Verifique o campo Email.', 'error');\n    return false;\n  }\n\n  const dataRequest = {\n    email: email,\n    collection: \"usersEmail\"\n  };\n\n  const success = await requestPassword(dataRequest);\n    if (success) {\n      swal({\n        title: 'Operação concluída',\n        text: 'Foi enviado uma mensagem para: '+ email +', informando a sua senha.',\n        icon: 'success'\n      }).then(function() {\n        window.location.replace('/');\n      });\n    } else {\n      swal('Erro', 'Email informado não localizado.', 'error');\n    }\n};\n\n\nrender() {\n    return (\n      <div>\n      <Form>\n        <FormGroup>\n          <Label for=\"email\">Digite seu <b>Email</b> e em breve, receberá uma nova senha:</Label>\n          <Input name=\"email\" id=\"email\" type=\"email\" placeholder=\"Email\" value={this.state.value} onChange={this.handleChangeEmail} />\n        </FormGroup>\n        <FormGroup>\n             <Button color=\"primary\" className=\"btn btn-primary\" onClick={this.enviar}>\n                  Enviar\n             </Button>\n          <Link to=\"/\">\n             <Button className=\"btn btn-secondary float-right\">\n                  Voltar\n             </Button>\n          </Link>      \n        </FormGroup>\n      </Form>\n      </div>\n    );\n  }\n}\nexport default ForgotPasswordForm;"]},"metadata":{},"sourceType":"module"}